@page "/counter"
@using Laaal.Models
@using Laaal.Services
@inject LocalModService LocalModService
<MTextField Placeholder="加载路径" @bind-Value="LocalPath"/>
<MButton OnClick="LoadAsync">加载本地mod</MButton>
<MTextField Placeholder="从路径" @bind-Value="LocalPathPrefix"/>
<MTextField Placeholder="移动到路径" @bind-Value="TargetPath"/>
<MButton OnClick="MoveModAsync">移动mod</MButton>


<MDataTable Headers="_headers" Items="LocalModService.List" ItemKey="@(r => r.Path)"
            ItemsPerPage="20" ResizeMode="DataTableResizeMode.Auto">
</MDataTable>

@code {
    private string LocalPath { get; set; } = @"D:\Mods";
    private string LocalPathPrefix { get; set; } = @"D:\Mods";
    private string TargetPath { get; set; } = @"D:\Mods";

    private async Task LoadAsync()
    {
        await LocalModService.LoadModListAsync(LocalPath);
    }

    private readonly List<DataTableHeader<ZipmodFile>> _headers =
    [
        new()
        {
            Text = "FileName",
            Align = DataTableHeaderAlign.Start,
            Sortable = true,
            Filterable = true,
            Value = nameof(ZipmodFile.Path)
        },
        new()
        {
            Text = "Guid",
            Sortable = true,
            Filterable = true,
            Value = nameof(ZipmodFile.Guid)
        },
        new()
        {
            Text = "Version",
            Sortable = true,
            Value = nameof(ZipmodFile.Version)
        },
        new()
        {
            Text = "Author",
            Sortable = true,
            Filterable = true,
            Value = nameof(ZipmodFile.Author)
        },
        new()
        {
            Text = "Game",
            Sortable = true,
            Filterable = true,
            Value = nameof(ZipmodFile.Game)
        },
        new()
        {
            Text = "FileSize",
            Sortable = true,
            Value = nameof(ZipmodFile.FileSize)
        },
        new()
        {
            Text = "UpdateTime",
            Sortable = true,
            Filterable = true,
            Value = nameof(ZipmodFile.UpdateTime)
        },
        new()
        {
            Text = "IsCharaMod",
            Sortable = true,
            Value = nameof(ZipmodFile.IsCharaMod)
        },
        new()
        {
            Text = "IsStudioMod",
            Sortable = true,
            Value = nameof(ZipmodFile.IsStudioMod)
        },
        new()
        {
            Text = "IsMapMod",
            Sortable = true,
            Value = nameof(ZipmodFile.IsMapMod)
        },
    ];

    private async Task MoveModAsync()
    {
        await LocalModService.MoveToTargetPath(LocalPathPrefix, TargetPath);
    }

}
